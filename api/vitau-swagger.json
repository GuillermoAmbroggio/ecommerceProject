{
  "swagger": "2.0",
  "info": {
    "title": "Vitau API",
    "x-logo": {
      "url": "https://vitau-logos.s3.us-west-1.amazonaws.com/profile-logo.png",
      "backgroundColor": "#FFFFFF"
    },
    "version": "v2"
  },
  "host": "api-v2-prod.vitau.mx",
  "schemes": ["http"],
  "basePath": "/",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "API Key Auth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY"
    },
    "Cookie Auth": {
      "type": "apiKey",
      "in": "cookie",
      "name": "sessionid"
    },
    "Bearer Auth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "security": [
    {
      "API Key Auth": []
    },
    {
      "Bearer Auth": []
    },
    {
      "Cookie Auth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [""]
      },
      "parameters": []
    },
    "/api/account-recovery/": {
      "post": {
        "operationId": "api_account-recovery_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountRecoveryWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/appointments/": {
      "get": {
        "operationId": "api_appointments_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Appointment"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_appointments_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/appointments/{id}/": {
      "get": {
        "operationId": "api_appointments_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_appointments_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_appointments_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_appointments_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/base-products/": {
      "get": {
        "operationId": "api_base-products_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "diseases",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "pharmaceutical_company",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BaseProductRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_base-products_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseProductRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/base-products/{id}/": {
      "get": {
        "operationId": "api_base-products_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseProductRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_base-products_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseProductRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_base-products_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BaseProductWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_base-products_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this base product.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/batches/": {
      "get": {
        "operationId": "api_batches_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "store",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BatchRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_batches_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/batches/bulk_update/": {
      "put": {
        "operationId": "api_batches_bulk_update_update",
        "description": "Endpoint that is required to update all instances of a queryset, instead of using `get_object()`.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_batches_bulk_update_partial_update",
        "description": "Endpoint that is required to update all instances of a queryset, instead of using `get_object()`.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/batches/exit/adjustment/": {
      "post": {
        "operationId": "api_batches_exit_exit_adjustment",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryExit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchRead"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/batches/exit/sale/": {
      "post": {
        "operationId": "api_batches_exit_exit_sale",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InventoryOrderExit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchRead"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/batches/{id}/": {
      "get": {
        "operationId": "api_batches_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_batches_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_batches_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BatchWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_batches_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this batch.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/carts/": {
      "get": {
        "operationId": "api_carts_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Cart"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_carts_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/carts/{id}/": {
      "get": {
        "operationId": "api_carts_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_carts_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_carts_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_carts_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/categories/": {
      "get": {
        "operationId": "api_categories_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Category"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_categories_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/categories/{id}/": {
      "get": {
        "operationId": "api_categories_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_categories_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_categories_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_categories_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this category.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/change-password/": {
      "post": {
        "operationId": "api_change-password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/coupons/": {
      "get": {
        "operationId": "api_coupons_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "has_free_shipping",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "unowned",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminCouponRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_coupons_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminCouponRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/coupons/{id}/": {
      "get": {
        "operationId": "api_coupons_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminCouponRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_coupons_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminCouponRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_coupons_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CouponWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CouponWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_coupons_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/diseases/": {
      "get": {
        "operationId": "api_diseases_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Disease"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_diseases_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/diseases/{id}/": {
      "get": {
        "operationId": "api_diseases_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_diseases_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_diseases_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Disease"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_diseases_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this disease.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/doctor-profiles/": {
      "get": {
        "operationId": "api_doctor-profiles_list",
        "description": "",
        "parameters": [
          {
            "name": "doctor",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DoctorProfileRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_doctor-profiles_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoctorProfileWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorProfileDoctorRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/doctor-profiles/{id}/": {
      "get": {
        "operationId": "api_doctor-profiles_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorProfileRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_doctor-profiles_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoctorProfileWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorProfileDoctorRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_doctor-profiles_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoctorProfileWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorProfileWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_doctor-profiles_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this doctor profile.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/doctors/": {
      "get": {
        "operationId": "api_doctors_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DoctorRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_doctors_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoctorWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/doctors/{id}/": {
      "get": {
        "operationId": "api_doctors_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_doctors_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoctorWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_doctors_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DoctorWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DoctorWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_doctors_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/groups/": {
      "get": {
        "operationId": "api_groups_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/groups/{id}/": {
      "get": {
        "operationId": "api_groups_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_groups_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_groups_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this grupo.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/image-albums/": {
      "get": {
        "operationId": "api_image-albums_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ImageAlbum"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_image-albums_create",
        "description": "Create an album of images. For now, we can receive several files along\nwith the is_default attribute. For it to work with other attributes we need to\nmodify this method.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageAlbum"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAlbum"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/image-albums/{id}/": {
      "get": {
        "operationId": "api_image-albums_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAlbum"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_image-albums_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageAlbum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAlbum"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_image-albums_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageAlbum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAlbum"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_image-albums_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this album.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/images/": {
      "get": {
        "operationId": "api_images_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Image"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_images_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/images/{id}/": {
      "get": {
        "operationId": "api_images_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_images_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_images_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_images_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this image.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/institutions/": {
      "get": {
        "operationId": "api_institutions_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Institution"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_institutions_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Institution"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Institution"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/institutions/{id}/": {
      "get": {
        "operationId": "api_institutions_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Institution"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_institutions_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Institution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Institution"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_institutions_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Institution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Institution"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_institutions_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this institution.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/insurance-carriers/": {
      "get": {
        "operationId": "api_insurance-carriers_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/InsuranceCarrier"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_insurance-carriers_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsuranceCarrier"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceCarrier"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/insurance-carriers/{id}/": {
      "get": {
        "operationId": "api_insurance-carriers_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceCarrier"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_insurance-carriers_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsuranceCarrier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceCarrier"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_insurance-carriers_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsuranceCarrier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceCarrier"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_insurance-carriers_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this insurance carrier.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/insurance-employees/": {
      "get": {
        "operationId": "api_insurance-employees_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/InsuranceEmployeeRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_insurance-employees_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsuranceEmployeeWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceEmployeeRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/insurance-employees/{id}/": {
      "get": {
        "operationId": "api_insurance-employees_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceEmployeeRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_insurance-employees_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsuranceEmployeeWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceEmployeeRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_insurance-employees_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsuranceEmployeeWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsuranceEmployeeWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_insurance-employees_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this insurance employee.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/insurance-policies/": {
      "get": {
        "operationId": "api_insurance-policies_list",
        "description": "",
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/InsurancePolicyRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_insurance-policies_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsurancePolicyWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsurancePolicyRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/insurance-policies/{id}/": {
      "get": {
        "operationId": "api_insurance-policies_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsurancePolicyRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_insurance-policies_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsurancePolicyWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsurancePolicyRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_insurance-policies_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InsurancePolicyWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InsurancePolicyWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_insurance-policies_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/invoicings/": {
      "get": {
        "operationId": "api_invoicings_list",
        "description": "",
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Invoicing"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_invoicings_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoicing"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoicing"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/invoicings/{id}/": {
      "get": {
        "operationId": "api_invoicings_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoicing"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_invoicings_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoicing"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoicing"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_invoicings_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Invoicing"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Invoicing"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_invoicings_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/logout/": {
      "post": {
        "operationId": "api_logout_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogoutWrite"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/medical-records/": {
      "get": {
        "operationId": "api_medical-records_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MedicalRecord"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_medical-records_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalRecord"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MedicalRecord"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/medical-records/{id}/": {
      "get": {
        "operationId": "api_medical-records_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MedicalRecord"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_medical-records_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MedicalRecord"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_medical-records_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MedicalRecord"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_medical-records_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/orders/": {
      "get": {
        "operationId": "api_orders_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "patient",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "expected_delivery_date",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "max_delivery_date",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "requires_prescription",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_method",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_subscription",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "origin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "has_enlace_vital",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_status__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_status__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_orders_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/orders/calculate/": {
      "post": {
        "operationId": "api_orders_calculate",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/orders/charge-guest/": {
      "post": {
        "operationId": "api_orders_charge_guest",
        "description": "An endpoint that allows a guest to purchase an order with no required authentication.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/orders/quote/": {
      "post": {
        "operationId": "api_orders_quote",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/orders/{id}/": {
      "get": {
        "operationId": "api_orders_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_orders_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_orders_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_orders_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/orders/{id}/download-invoice/": {
      "get": {
        "operationId": "api_orders_download_invoice",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/patients/": {
      "get": {
        "operationId": "api_patients_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_patients_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/patients/{id}/": {
      "get": {
        "operationId": "api_patients_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_patients_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_patients_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_patients_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/payment-methods/": {
      "get": {
        "operationId": "api_payment-methods_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaymentMethod"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_payment-methods_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/payment-methods/{id}/": {
      "get": {
        "operationId": "api_payment-methods_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_payment-methods_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_payment-methods_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_payment-methods_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/payments/": {
      "get": {
        "operationId": "api_payments_list",
        "description": "",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaymentRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_payments_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentToken"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentToken"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/payments/{id}/": {
      "get": {
        "operationId": "api_payments_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_payments_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_payments_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_payments_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/paypal-agreements/": {
      "get": {
        "operationId": "api_paypal-agreements_list",
        "description": "",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaypalAgreement"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_paypal-agreements_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/paypal-agreements/token/": {
      "post": {
        "operationId": "api_paypal-agreements_token",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/paypal-agreements/{id}/": {
      "get": {
        "operationId": "api_paypal-agreements_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_paypal-agreements_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_paypal-agreements_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaypalAgreement"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_paypal-agreements_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/pharmaceutical-companies/": {
      "get": {
        "operationId": "api_pharmaceutical-companies_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PharmaceuticalCompany"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_pharmaceutical-companies_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmaceuticalCompany"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PharmaceuticalCompany"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/pharmaceutical-companies/{id}/": {
      "get": {
        "operationId": "api_pharmaceutical-companies_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PharmaceuticalCompany"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_pharmaceutical-companies_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmaceuticalCompany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PharmaceuticalCompany"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_pharmaceutical-companies_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmaceuticalCompany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PharmaceuticalCompany"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_pharmaceutical-companies_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this pharmaceutical company.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/prescriptions/": {
      "get": {
        "operationId": "api_prescriptions_list",
        "description": "",
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Prescription"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_prescriptions_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prescription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prescription"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/prescriptions/{id}/": {
      "get": {
        "operationId": "api_prescriptions_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prescription"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_prescriptions_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prescription"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_prescriptions_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Prescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prescription"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_prescriptions_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/products/": {
      "get": {
        "operationId": "api_products_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "base__diseases",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "base__category",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "base__pharmaceutical_company",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "current_supplier",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "has_shortage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "number"
          },
          {
            "name": "ean_key__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProductRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_products_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/products/bulk_update/": {
      "put": {
        "operationId": "api_products_bulk_update_update",
        "description": "Endpoint that is required to update all instances of a queryset, instead of using `get_object()`.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_products_bulk_update_partial_update",
        "description": "Endpoint that is required to update all instances of a queryset, instead of using `get_object()`.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/products/inventory/": {
      "get": {
        "operationId": "api_products_inventory",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "base__diseases",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "base__category",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "base__pharmaceutical_company",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "current_supplier",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "has_shortage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "number"
          },
          {
            "name": "ean_key__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProductWrite"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/products/{id}/": {
      "get": {
        "operationId": "api_products_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_products_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_products_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_products_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/publications/": {
      "get": {
        "operationId": "api_publications_list",
        "description": "",
        "parameters": [
          {
            "name": "doctor",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Publication"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_publications_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/publications/{id}/": {
      "get": {
        "operationId": "api_publications_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_publications_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_publications_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Publication"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_publications_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this publication.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/reminders/": {
      "get": {
        "operationId": "api_reminders_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Reminder"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_reminders_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/reminders/{id}/": {
      "get": {
        "operationId": "api_reminders_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_reminders_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_reminders_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_reminders_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/reset-password/": {
      "post": {
        "operationId": "api_reset-password_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/secretaries/": {
      "get": {
        "operationId": "api_secretaries_list",
        "description": "",
        "parameters": [
          {
            "name": "doctor",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Secretary"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_secretaries_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Secretary"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secretary"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/secretaries/{id}/": {
      "get": {
        "operationId": "api_secretaries_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secretary"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_secretaries_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Secretary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secretary"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_secretaries_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Secretary"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secretary"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_secretaries_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this secretary.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/session-login/": {
      "post": {
        "operationId": "api_session-login_create",
        "description": "Cookie-authentication (with csrf token required).",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/session-logout/": {
      "get": {
        "operationId": "api_session-logout_list",
        "description": "Remove the authenticated user's ID from the request and flush their\nsession data.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/session/": {
      "get": {
        "operationId": "api_session_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/set-csrf-token/": {
      "get": {
        "operationId": "api_set-csrf-token_list",
        "description": "Sets the csrf token on client",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/shipping-method-zip-code-locations/": {
      "get": {
        "operationId": "api_shipping-method-zip-code-locations_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ShippingMethodZipCodeLocationRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_shipping-method-zip-code-locations_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingMethodZipCodeLocationWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethodZipCodeLocationWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/shipping-method-zip-code-locations/{id}/": {
      "get": {
        "operationId": "api_shipping-method-zip-code-locations_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethodZipCodeLocationRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_shipping-method-zip-code-locations_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingMethodZipCodeLocationWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethodZipCodeLocationWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_shipping-method-zip-code-locations_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingMethodZipCodeLocationWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethodZipCodeLocationWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_shipping-method-zip-code-locations_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/shipping-methods/": {
      "get": {
        "operationId": "api_shipping-methods_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ShippingMethod"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_shipping-methods_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/shipping-methods/{id}/": {
      "get": {
        "operationId": "api_shipping-methods_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_shipping-methods_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_shipping-methods_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ShippingMethod"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_shipping-methods_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/shippings/": {
      "get": {
        "operationId": "api_shippings_list",
        "description": "",
        "parameters": [
          {
            "name": "patient",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Shipping"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_shippings_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipping"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Shipping"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/shippings/{id}/": {
      "get": {
        "operationId": "api_shippings_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Shipping"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_shippings_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Shipping"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_shippings_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shipping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Shipping"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_shippings_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/stores/": {
      "get": {
        "operationId": "api_stores_list",
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Store"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_stores_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/stores/{id}/": {
      "get": {
        "operationId": "api_stores_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_stores_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_stores_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_stores_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this store.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/subscription-orders/": {
      "get": {
        "operationId": "api_subscription-orders_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "patient",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "expected_delivery_date",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "max_delivery_date",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "invoicing_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "requires_prescription",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_method",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_subscription",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "origin",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscription",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "has_enlace_vital",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_status__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "payment_status__in",
            "in": "query",
            "description": "M\u00faltiples valores separados por comas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/subscription-orders/{id}/": {
      "get": {
        "operationId": "api_subscription-orders_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_subscription-orders_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_subscription-orders_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/subscription-orders/{id}/download-invoice/": {
      "get": {
        "operationId": "api_subscription-orders_download_invoice",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientOrderWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/subscriptions/": {
      "get": {
        "operationId": "api_subscriptions_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "patient",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientSubscriptionRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_subscriptions_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubscriptionRead"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/subscriptions/{id}/": {
      "get": {
        "operationId": "api_subscriptions_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientSubscriptionRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_subscriptions_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubscriptionRead"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_subscriptions_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientSubscriptionWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PatientSubscriptionWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_subscriptions_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/subscriptions/{id}/pause/": {
      "post": {
        "operationId": "api_subscriptions_pause",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubscriptionRead"
            }
          },
          "400": {
            "description": "Cannot pause a subscription which is not active"
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/subscriptions/{id}/start/": {
      "post": {
        "operationId": "api_subscriptions_start",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionStartWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubscriptionRead"
            }
          },
          "400": {
            "description": "Cannot start a subscription which is already active"
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/suppliers/": {
      "get": {
        "operationId": "api_suppliers_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierWrite"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_suppliers_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/suppliers/{id}/": {
      "get": {
        "operationId": "api_suppliers_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_suppliers_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_suppliers_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_suppliers_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this supplier.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/suppliers/{id}/product-costs/": {
      "post": {
        "operationId": "api_suppliers_product_costs",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SupplierWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this supplier.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/tags/": {
      "get": {
        "operationId": "api_tags_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_tags_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/tags/{id}/": {
      "get": {
        "operationId": "api_tags_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_tags_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_tags_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_tags_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this tag.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/token/": {
      "post": {
        "operationId": "api_token_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenLoginWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenRefreshRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/token/refresh/": {
      "post": {
        "operationId": "api_token_refresh_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenRefresh"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenRefreshRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/users/": {
      "get": {
        "operationId": "api_users_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_staff",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "groups__id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserRead"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_users_create",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/users/register/": {
      "post": {
        "operationId": "api_users_register",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserRead"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/users/staff/create-user/": {
      "post": {
        "operationId": "api_users_staff_staff_create_user",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWrite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/users/{id}/": {
      "get": {
        "operationId": "api_users_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserRead"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_users_update",
        "description": "Return information serialized by read_serializer",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserRead"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_users_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWrite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWrite"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_users_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/variants/": {
      "get": {
        "operationId": "api_variants_list",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Variant"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_variants_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Variant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Variant"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/variants/list-options/": {
      "get": {
        "operationId": "api_variants_list_options",
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Variant"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/variants/{id}/": {
      "get": {
        "operationId": "api_variants_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Variant"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this variant.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/waiting-lists/": {
      "get": {
        "operationId": "api_waiting-lists_list",
        "description": "",
        "parameters": [
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WaitingList"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_waiting-lists_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WaitingList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WaitingList"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/waiting-lists/{id}/": {
      "get": {
        "operationId": "api_waiting-lists_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WaitingList"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_waiting-lists_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WaitingList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WaitingList"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_waiting-lists_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WaitingList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WaitingList"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_waiting-lists_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/api/whoami/": {
      "get": {
        "operationId": "api_whoami_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/work-experiences/": {
      "get": {
        "operationId": "api_work-experiences_list",
        "description": "",
        "parameters": [
          {
            "name": "doctor",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WorkExperience"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "post": {
        "operationId": "api_work-experiences_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/work-experiences/{id}/": {
      "get": {
        "operationId": "api_work-experiences_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        },
        "tags": ["api"]
      },
      "put": {
        "operationId": "api_work-experiences_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        },
        "tags": ["api"]
      },
      "patch": {
        "operationId": "api_work-experiences_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WorkExperience"
            }
          }
        },
        "tags": ["api"]
      },
      "delete": {
        "operationId": "api_work-experiences_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this work experience.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/api/zip-code-locations/": {
      "get": {
        "operationId": "api_zip-code-locations_list",
        "description": "",
        "parameters": [
          {
            "name": "zipcode",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": ["count", "results"],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ZipCodeLocation"
                  }
                }
              }
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": []
    },
    "/api/zip-code-locations/{id}/": {
      "get": {
        "operationId": "api_zip-code-locations_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ZipCodeLocation"
            }
          }
        },
        "tags": ["api"]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this zip code location.",
          "required": true,
          "type": "integer"
        }
      ]
    }
  },
  "definitions": {
    "AccountRecoveryWrite": {
      "required": ["email"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "Empty": {
      "type": "object",
      "properties": {}
    },
    "Appointment": {
      "required": [
        "patient_first_name",
        "patient_last_name",
        "patient_email",
        "start_datetime",
        "end_datetime",
        "price",
        "location",
        "doctor"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "patient_first_name": {
          "title": "Patient first name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "patient_last_name": {
          "title": "Patient last name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "patient_email": {
          "title": "Patient email",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "start_datetime": {
          "title": "Date and time of start",
          "type": "string",
          "format": "date-time"
        },
        "end_datetime": {
          "title": "Date and time of end",
          "type": "string",
          "format": "date-time"
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal"
        },
        "location": {
          "title": "Location",
          "type": "string",
          "maxLength": 254,
          "minLength": 1
        },
        "doctor": {
          "title": "The doctor's appointment",
          "type": "integer"
        }
      }
    },
    "Category": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "parent": {
          "title": "Category's parent",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "PharmaceuticalCompany": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "Disease": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        }
      }
    },
    "Tag": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        }
      }
    },
    "MedicalInformation": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "active_ingredient": {
          "title": "Active ingredient",
          "type": "string",
          "maxLength": 250
        },
        "is_generic": {
          "title": "Is generic",
          "type": "boolean"
        },
        "group_number": {
          "title": "Group number",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "requires_prescription": {
          "title": "Requires prescription",
          "type": "boolean"
        },
        "base_product": {
          "title": "Medical information for base product",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SupplierRead": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "SupplierProductRead": {
      "required": ["supplier", "cost", "product"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "supplier": {
          "$ref": "#/definitions/SupplierRead"
        },
        "cost": {
          "title": "Cost",
          "type": "string",
          "format": "decimal"
        },
        "product": {
          "title": "Product",
          "type": "integer"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "album": {
          "title": "Album",
          "type": "integer"
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "is_default": {
          "title": "Is default",
          "type": "boolean"
        }
      }
    },
    "ImageAlbum": {
      "required": ["images"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Variant": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "ProductVariantRead": {
      "required": ["variant", "value"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "variant": {
          "$ref": "#/definitions/Variant"
        },
        "value": {
          "title": "Value",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "ProductReadSerializerWithoutBase": {
      "required": [
        "current_supplier",
        "supplier_products",
        "album",
        "product_variants",
        "price"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "current_supplier": {
          "$ref": "#/definitions/SupplierRead"
        },
        "cost": {
          "title": "Cost",
          "type": "string",
          "readOnly": true
        },
        "presentation": {
          "title": "Presentation",
          "type": "string",
          "readOnly": true
        },
        "supplier_products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplierProductRead"
          }
        },
        "album": {
          "$ref": "#/definitions/ImageAlbum"
        },
        "product_variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariantRead"
          }
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal"
        },
        "has_iva": {
          "title": "Has iva",
          "type": "boolean"
        },
        "public_price": {
          "title": "Public price",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "average_cost": {
          "title": "Average cost",
          "type": "string",
          "format": "decimal"
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "sat_key": {
          "title": "Sat key",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "sat_unit": {
          "title": "Sat unit",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "has_shortage": {
          "title": "Has shortage",
          "type": "boolean"
        },
        "ean_key": {
          "title": "Ean field",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "should_calculate_price": {
          "title": "Calculate price",
          "type": "boolean"
        },
        "enlace_vital_description": {
          "title": "Description for enlace vital discount",
          "type": "string",
          "maxLength": 10
        },
        "active_ingredient": {
          "title": "Active ingredient",
          "type": "string",
          "maxLength": 250,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "group_number": {
          "title": "Group number",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "is_generic": {
          "title": "Is generic",
          "type": "boolean",
          "x-nullable": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "x-nullable": true
        },
        "base": {
          "title": "Product's base information",
          "type": "integer",
          "x-nullable": true
        },
        "category": {
          "title": "Product's category",
          "type": "integer",
          "x-nullable": true
        },
        "medical_information": {
          "title": "Product's medical information",
          "type": "integer",
          "x-nullable": true
        },
        "pharmaceutical_company": {
          "title": "Product's pharmaceutical company",
          "type": "integer",
          "x-nullable": true
        },
        "variants": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "diseases": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "BaseProductRead": {
      "required": [
        "category",
        "pharmaceutical_company",
        "diseases",
        "tags",
        "medical_information",
        "products",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "pharmaceutical_company": {
          "$ref": "#/definitions/PharmaceuticalCompany"
        },
        "diseases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disease"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "medical_information": {
          "$ref": "#/definitions/MedicalInformation"
        },
        "is_medicine": {
          "title": "Is medicine",
          "type": "string",
          "readOnly": true
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductReadSerializerWithoutBase"
          }
        },
        "variants": {
          "title": "Variants",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "created_by": {
          "title": "User that created product",
          "type": "integer",
          "x-nullable": true
        },
        "updated_by": {
          "title": "Last user to update product",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "BaseProductWrite": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "category": {
          "title": "Category",
          "type": "integer"
        },
        "pharmaceutical_company": {
          "title": "Pharmaceutical company",
          "type": "integer"
        },
        "diseases": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "medical_information": {
          "$ref": "#/definitions/MedicalInformation"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "created_by": {
          "title": "User that created product",
          "type": "integer",
          "x-nullable": true
        },
        "updated_by": {
          "title": "Last user to update product",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "BatchTransaction": {
      "required": ["quantity", "is_entry"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "supplier": {
          "title": "Supplier",
          "type": "integer"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "invoice_code": {
          "title": "Invoice code",
          "type": "string",
          "maxLength": 30
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "unit_cost": {
          "title": "Unit cost",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "is_entry": {
          "title": "Is it an entry? (true) or an exit? (false)",
          "type": "boolean"
        },
        "option": {
          "title": "Option (transfer, buy, sell, refund, etc.)",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "serial_number": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 30
        },
        "batch": {
          "title": "Batch",
          "type": "integer",
          "readOnly": true
        },
        "detail": {
          "title": "Order_detail",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "BatchRead": {
      "required": ["product", "store", "transactions", "number", "expires_at"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "integer"
        },
        "store": {
          "title": "Store",
          "type": "integer"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "title": "Value",
          "type": "string",
          "readOnly": true
        },
        "stock": {
          "title": "Stock",
          "type": "string",
          "readOnly": true
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchTransaction"
          }
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "number": {
          "title": "Number",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "expires_at": {
          "title": "Expires at",
          "type": "string",
          "format": "date-time"
        },
        "average_cost": {
          "title": "Average cost",
          "type": "string",
          "format": "decimal"
        }
      }
    },
    "BatchWrite": {
      "required": ["product", "store", "number", "expires_at"],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "product": {
          "title": "Product",
          "type": "integer"
        },
        "store": {
          "title": "Store",
          "type": "integer"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchTransaction"
          }
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "number": {
          "title": "Number",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "expires_at": {
          "title": "Expires at",
          "type": "string",
          "format": "date-time"
        },
        "average_cost": {
          "title": "Average cost",
          "type": "string",
          "format": "decimal"
        }
      }
    },
    "InventoryExit": {
      "required": ["batch", "quantity", "option"],
      "type": "object",
      "properties": {
        "batch": {
          "title": "Batch",
          "type": "integer"
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer"
        },
        "option": {
          "title": "Option",
          "type": "string",
          "minLength": 1
        },
        "comments": {
          "title": "Comments",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InventoryOrderExit": {
      "required": ["batch", "quantity", "detail"],
      "type": "object",
      "properties": {
        "batch": {
          "title": "Batch",
          "type": "integer"
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer"
        },
        "option": {
          "title": "Option",
          "type": "string",
          "minLength": 1
        },
        "comments": {
          "title": "Comments",
          "type": "string",
          "minLength": 1
        },
        "detail": {
          "title": "Detail",
          "type": "integer"
        },
        "serial_number": {
          "title": "Serial number",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CartDetail": {
      "required": ["product", "quantity"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "integer"
        },
        "cart": {
          "title": "Cart",
          "type": "integer"
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        }
      }
    },
    "Cart": {
      "required": ["patient"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartDetail"
          }
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        }
      }
    },
    "ChangePasswordWrite": {
      "required": ["password", "new_password", "new_password_verification"],
      "type": "object",
      "properties": {
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "new_password": {
          "title": "New password",
          "type": "string",
          "minLength": 1
        },
        "new_password_verification": {
          "title": "New password verification",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "BaseProductReadSerializerWithoutProducts": {
      "required": [
        "category",
        "pharmaceutical_company",
        "diseases",
        "tags",
        "medical_information",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "pharmaceutical_company": {
          "$ref": "#/definitions/PharmaceuticalCompany"
        },
        "diseases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disease"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "medical_information": {
          "$ref": "#/definitions/MedicalInformation"
        },
        "is_medicine": {
          "title": "Is medicine",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string"
        },
        "created_by": {
          "title": "User that created product",
          "type": "integer",
          "x-nullable": true
        },
        "updated_by": {
          "title": "Last user to update product",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "ProductRead": {
      "required": [
        "current_supplier",
        "supplier_products",
        "album",
        "product_variants",
        "base",
        "price"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "current_supplier": {
          "$ref": "#/definitions/SupplierRead"
        },
        "cost": {
          "title": "Cost",
          "type": "string",
          "readOnly": true
        },
        "presentation": {
          "title": "Presentation",
          "type": "string",
          "readOnly": true
        },
        "supplier_products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplierProductRead"
          }
        },
        "album": {
          "$ref": "#/definitions/ImageAlbum"
        },
        "product_variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariantRead"
          }
        },
        "base": {
          "$ref": "#/definitions/BaseProductReadSerializerWithoutProducts"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal"
        },
        "has_iva": {
          "title": "Has iva",
          "type": "boolean"
        },
        "public_price": {
          "title": "Public price",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "average_cost": {
          "title": "Average cost",
          "type": "string",
          "format": "decimal"
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "sat_key": {
          "title": "Sat key",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "sat_unit": {
          "title": "Sat unit",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "has_shortage": {
          "title": "Has shortage",
          "type": "boolean"
        },
        "ean_key": {
          "title": "Ean field",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "should_calculate_price": {
          "title": "Calculate price",
          "type": "boolean"
        },
        "enlace_vital_description": {
          "title": "Description for enlace vital discount",
          "type": "string",
          "maxLength": 10
        },
        "active_ingredient": {
          "title": "Active ingredient",
          "type": "string",
          "maxLength": 250,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "group_number": {
          "title": "Group number",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "is_generic": {
          "title": "Is generic",
          "type": "boolean",
          "x-nullable": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "x-nullable": true
        },
        "category": {
          "title": "Product's category",
          "type": "integer",
          "x-nullable": true
        },
        "medical_information": {
          "title": "Product's medical information",
          "type": "integer",
          "x-nullable": true
        },
        "pharmaceutical_company": {
          "title": "Product's pharmaceutical company",
          "type": "integer",
          "x-nullable": true
        },
        "variants": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "diseases": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "ZipCodeLocation": {
      "required": ["zipcode", "state", "city", "district"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "zipcode": {
          "title": "Zip code",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "state": {
          "title": "State",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "city": {
          "title": "City",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "district": {
          "title": "District",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "UserRead": {
      "required": ["email", "first_name", "last_name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "patient": {
          "title": "Patient",
          "type": "string",
          "readOnly": true
        },
        "doctor": {
          "title": "Doctor",
          "type": "string",
          "readOnly": true
        },
        "insurance_employee": {
          "title": "Insurance employee",
          "type": "string",
          "readOnly": true
        },
        "country_code": {
          "title": "Country code",
          "type": "string",
          "readOnly": true
        },
        "national_number": {
          "title": "National number",
          "type": "string",
          "readOnly": true
        },
        "date_joined": {
          "title": "Fecha de alta",
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "email": {
          "title": "Direcci\u00f3n de correo electr\u00f3nico",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25
        },
        "first_name": {
          "title": "Fist name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "last_name": {
          "title": "Apellidos",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "second_last_name": {
          "title": "Second last name",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "sex": {
          "title": "Sex",
          "type": "string",
          "enum": ["M", "F"]
        },
        "birthdate": {
          "title": "Birthdate",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "medical_condition": {
          "title": "Medical condition",
          "type": "string",
          "maxLength": 100
        },
        "created_by": {
          "title": "Created by",
          "type": "integer",
          "x-nullable": true
        },
        "groups": {
          "description": "Los grupos a los que pertenece este usuario. Un usuario tendr\u00e1 todos los permisos asignados a cada uno de sus grupos.",
          "type": "array",
          "items": {
            "title": "Grupos",
            "description": "Los grupos a los que pertenece este usuario. Un usuario tendr\u00e1 todos los permisos asignados a cada uno de sus grupos.",
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "InsuranceCarrier": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "patients": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "PatientRead": {
      "required": ["user", "insurance_carriers"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/UserRead"
        },
        "referred_by": {
          "title": "Referred by user",
          "type": "integer",
          "x-nullable": true
        },
        "default_shipping": {
          "title": "The default shipping details",
          "type": "integer",
          "x-nullable": true
        },
        "default_invoicing": {
          "title": "The default invoicing details",
          "type": "integer",
          "x-nullable": true
        },
        "preferred_payment": {
          "title": "The preferred payment details",
          "type": "integer",
          "x-nullable": true
        },
        "insurance_carriers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InsuranceCarrier"
          }
        }
      }
    },
    "AdminCouponRead": {
      "required": ["code", "value"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "valid_products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRead"
          },
          "readOnly": true
        },
        "valid_locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZipCodeLocation"
          },
          "readOnly": true
        },
        "enabled_for": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientRead"
          },
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "code": {
          "title": "Code",
          "type": "string",
          "maxLength": 16,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 150
        },
        "value": {
          "title": "Value",
          "type": "string",
          "format": "decimal"
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "has_free_shipping": {
          "title": "Has free shipping",
          "type": "boolean"
        },
        "has_free_extra_at": {
          "title": "Has free extra after this amount",
          "type": "integer",
          "maximum": 32767,
          "minimum": -32768,
          "x-nullable": true
        },
        "is_for_new_customers_only": {
          "title": "Valid for new customers only",
          "type": "boolean",
          "x-nullable": true
        },
        "valid_from": {
          "title": "Valid from",
          "type": "string",
          "format": "date-time"
        },
        "valid_until": {
          "title": "Valid until",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "minimum_purchase": {
          "title": "Minimum purchase",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "maximum_discount": {
          "title": "Maximum discount",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "total_limit": {
          "title": "Total limit of uses",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "user_limit": {
          "title": "Limit of uses per user",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "owner": {
          "title": "Owner of the coupon",
          "type": "integer",
          "x-nullable": true
        },
        "redeemed_by": {
          "type": "array",
          "items": {
            "title": "Redeemed by patients",
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        }
      }
    },
    "CouponWrite": {
      "required": ["code", "value"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "pharmaceutical_companies": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "valid_products": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "excluded_products": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "states": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled_for": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "code": {
          "title": "Code",
          "type": "string",
          "maxLength": 16,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 150
        },
        "value": {
          "title": "Value",
          "type": "string",
          "format": "decimal"
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "has_free_shipping": {
          "title": "Has free shipping",
          "type": "boolean"
        },
        "has_free_extra_at": {
          "title": "Has free extra after this amount",
          "type": "integer",
          "maximum": 32767,
          "minimum": -32768,
          "x-nullable": true
        },
        "is_for_new_customers_only": {
          "title": "Valid for new customers only",
          "type": "boolean",
          "x-nullable": true
        },
        "valid_from": {
          "title": "Valid from",
          "type": "string",
          "format": "date-time"
        },
        "valid_until": {
          "title": "Valid until",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "minimum_purchase": {
          "title": "Minimum purchase",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "maximum_discount": {
          "title": "Maximum discount",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "total_limit": {
          "title": "Total limit of uses",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "user_limit": {
          "title": "Limit of uses per user",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "owner": {
          "title": "Owner of the coupon",
          "type": "integer",
          "x-nullable": true
        },
        "redeemed_by": {
          "type": "array",
          "items": {
            "title": "Redeemed by patients",
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "valid_locations": {
          "type": "array",
          "items": {
            "title": "Valid for locations",
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "DoctorProfileDoctorRead": {
      "required": ["name", "email"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "rfc": {
          "title": "Rfc",
          "type": "string",
          "maxLength": 254
        },
        "speciality": {
          "title": "Speciality",
          "type": "string",
          "maxLength": 254
        },
        "address": {
          "title": "Address",
          "type": "string",
          "maxLength": 254
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25
        },
        "signature": {
          "title": "E-sign",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "institutions": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        }
      }
    },
    "DoctorProfileRead": {
      "required": ["doctor"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "doctor": {
          "$ref": "#/definitions/DoctorProfileDoctorRead"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "secondary_phone": {
          "title": "Secondary phone",
          "type": "string",
          "maxLength": 25
        },
        "whatsapp_phone": {
          "title": "Whatsapp phone",
          "type": "string",
          "maxLength": 25
        },
        "about": {
          "title": "About",
          "type": "string"
        },
        "emergency_phone": {
          "title": "Emergency phone",
          "type": "string",
          "maxLength": 25
        },
        "office_location": {
          "title": "Office location",
          "type": "string",
          "maxLength": 254
        },
        "profile_image": {
          "title": "Profile image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "cover_image": {
          "title": "Cover image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "location_image": {
          "title": "Location image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        }
      }
    },
    "DoctorProfileWrite": {
      "required": ["doctor"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "secondary_phone": {
          "title": "Secondary phone",
          "type": "string",
          "maxLength": 25
        },
        "whatsapp_phone": {
          "title": "Whatsapp phone",
          "type": "string",
          "maxLength": 25
        },
        "about": {
          "title": "About",
          "type": "string"
        },
        "emergency_phone": {
          "title": "Emergency phone",
          "type": "string",
          "maxLength": 25
        },
        "office_location": {
          "title": "Office location",
          "type": "string",
          "maxLength": 254
        },
        "profile_image": {
          "title": "Profile image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "cover_image": {
          "title": "Cover image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "location_image": {
          "title": "Location image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "doctor": {
          "title": "Doctor",
          "type": "integer"
        }
      }
    },
    "DoctorRead": {
      "required": ["user", "name", "email"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/UserRead"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "rfc": {
          "title": "Rfc",
          "type": "string",
          "maxLength": 254
        },
        "speciality": {
          "title": "Speciality",
          "type": "string",
          "maxLength": 254
        },
        "address": {
          "title": "Address",
          "type": "string",
          "maxLength": 254
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25
        },
        "signature": {
          "title": "E-sign",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "patients": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "institutions": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        }
      }
    },
    "DoctorWrite": {
      "required": ["name", "email"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "rfc": {
          "title": "Rfc",
          "type": "string",
          "maxLength": 254
        },
        "speciality": {
          "title": "Speciality",
          "type": "string",
          "maxLength": 254
        },
        "address": {
          "title": "Address",
          "type": "string",
          "maxLength": 254
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25
        },
        "signature": {
          "title": "E-sign",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "user": {
          "title": "Usuario",
          "type": "integer",
          "x-nullable": true
        },
        "patients": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "institutions": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        }
      }
    },
    "Group": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 150,
          "minLength": 1
        }
      }
    },
    "Institution": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100
        }
      }
    },
    "InsuranceEmployeeRead": {
      "required": ["user", "carrier"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/UserRead"
        },
        "carrier": {
          "$ref": "#/definitions/InsuranceCarrier"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "InsuranceEmployeeWrite": {
      "required": ["user", "carrier"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "title": "User",
          "type": "integer"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "carrier": {
          "title": "The insurance carrier",
          "type": "integer"
        }
      }
    },
    "Broker": {
      "required": ["name", "email", "phone"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "patients": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "InsurancePolicyRead": {
      "required": [
        "broker",
        "insurance_carrier",
        "policy_number",
        "claim_number",
        "start_date",
        "expiring_date",
        "patient"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "document_name": {
          "title": "Document name",
          "type": "string",
          "readOnly": true
        },
        "broker": {
          "$ref": "#/definitions/Broker"
        },
        "insurance_carrier": {
          "$ref": "#/definitions/InsuranceCarrier"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "policy_number": {
          "title": "Policy number",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "claim_number": {
          "title": "Claim number",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "start_date": {
          "title": "Start date",
          "type": "string",
          "format": "date"
        },
        "expiring_date": {
          "title": "Expiring date",
          "type": "string",
          "format": "date"
        },
        "document": {
          "title": "Document",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        }
      }
    },
    "InsurancePolicyWrite": {
      "required": [
        "policy_number",
        "claim_number",
        "start_date",
        "expiring_date",
        "patient",
        "insurance_carrier"
      ],
      "type": "object",
      "properties": {
        "broker": {
          "title": "Broker",
          "type": "integer"
        },
        "policy_number": {
          "title": "Policy number",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "claim_number": {
          "title": "Claim number",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "start_date": {
          "title": "Start date",
          "type": "string",
          "format": "date"
        },
        "expiring_date": {
          "title": "Expiring date",
          "type": "string",
          "format": "date"
        },
        "document": {
          "title": "Document",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "insurance_carrier": {
          "title": "Insurance carrier",
          "type": "integer"
        }
      }
    },
    "Invoicing": {
      "required": ["full_name", "rfc", "patient"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "full_name": {
          "title": "Full name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "rfc": {
          "title": "RFC",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "street": {
          "title": "Street",
          "type": "string",
          "maxLength": 250
        },
        "exterior_number": {
          "title": "Exterior number",
          "type": "string",
          "maxLength": 20
        },
        "neighborhood": {
          "title": "Neighborhood",
          "type": "string",
          "maxLength": 100
        },
        "city": {
          "title": "City",
          "type": "string",
          "maxLength": 100
        },
        "state": {
          "title": "State",
          "type": "string",
          "maxLength": 100
        },
        "country": {
          "title": "Country",
          "type": "string",
          "maxLength": 100
        },
        "zipcode": {
          "title": "Zip code",
          "type": "string",
          "maxLength": 20
        },
        "latitude": {
          "title": "Latitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "longitude": {
          "title": "Longitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "email": {
          "title": "Direcci\u00f3n de correo electr\u00f3nico",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        }
      }
    },
    "LogoutWrite": {
      "required": ["refresh"],
      "type": "object",
      "properties": {
        "refresh": {
          "title": "Refresh",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "MedicalRecord": {
      "required": ["patient"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "document_name": {
          "title": "Document name",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "document": {
          "title": "Document",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "issue_date": {
          "title": "Issue date",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "expiring_date": {
          "title": "Expiring date",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "data": {
          "title": "Data",
          "type": "string",
          "x-nullable": true
        },
        "insurance_carrier": {
          "title": "The insurance carrier",
          "type": "integer",
          "x-nullable": true
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "doctor": {
          "title": "Doctor",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "OrderList": {
      "required": ["total", "expected_delivery_date", "max_delivery_date"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "order_status": {
          "title": "Order status",
          "type": "string",
          "enum": [
            "quoted",
            "approved",
            "in_process",
            "ready",
            "shipped",
            "delivered",
            "cancelled",
            "delayed",
            "shortage"
          ]
        },
        "patient_order_status": {
          "title": "Patient order status",
          "type": "string",
          "readOnly": true
        },
        "patient": {
          "title": "Patient",
          "type": "string",
          "readOnly": true
        },
        "payment_status": {
          "title": "Payment status",
          "type": "string",
          "enum": ["unpaid", "credit", "paid", "in_process", "rejected"]
        },
        "products_count": {
          "title": "Products count",
          "type": "string",
          "readOnly": true
        },
        "product_images": {
          "title": "Product images",
          "type": "string",
          "readOnly": true
        },
        "shipping": {
          "title": "Shipping",
          "type": "string",
          "readOnly": true
        },
        "payment_method": {
          "title": "Payment method",
          "type": "string",
          "readOnly": true
        },
        "coupon": {
          "title": "Coupon",
          "type": "string",
          "readOnly": true
        },
        "total": {
          "title": "Total",
          "type": "string",
          "format": "decimal"
        },
        "origin": {
          "title": "Origin",
          "type": "string",
          "maxLength": 20
        },
        "tags": {
          "title": "Tags",
          "type": "string",
          "readOnly": true
        },
        "expected_delivery_date": {
          "title": "Expected delivery date",
          "type": "string",
          "format": "date-time"
        },
        "max_delivery_date": {
          "title": "Max delivery date",
          "type": "string",
          "format": "date-time"
        },
        "subscription": {
          "title": "Subscription",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "OrderDetailWrite": {
      "required": ["product", "quantity"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "integer"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "cost": {
          "title": "Cost",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "subtotal": {
          "title": "Subtotal",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "total": {
          "title": "Total",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "discount": {
          "title": "Discount",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "iva": {
          "title": "Iva",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "order": {
          "title": "Order",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PatientOrderWrite": {
      "required": ["details", "patient", "payment_method"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderDetailWrite"
          }
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "shipping": {
          "title": "Shipping",
          "type": "integer",
          "x-nullable": true
        },
        "store": {
          "title": "Store",
          "type": "integer",
          "x-nullable": true
        },
        "payment": {
          "title": "Payment",
          "type": "integer",
          "x-nullable": true
        },
        "paypal_agreement": {
          "title": "Paypal agreement",
          "type": "integer"
        },
        "payment_method": {
          "title": "Payment method",
          "type": "integer"
        },
        "invoicing": {
          "title": "Invoicing",
          "type": "integer",
          "x-nullable": true
        },
        "coupon": {
          "title": "Coupon",
          "type": "string",
          "maxLength": 16,
          "minLength": 1
        },
        "shipping_method": {
          "title": "Shipping method",
          "type": "integer"
        },
        "prescription": {
          "title": "Prescription",
          "type": "integer",
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "insurance_refund_status": {
          "title": "Insurance refund status",
          "type": "string",
          "enum": [
            "not_started",
            "missing_data",
            "sent_to_broker",
            "sent_to_insurer",
            "approved_by_insurer"
          ]
        },
        "order_status": {
          "title": "Order status",
          "type": "string",
          "enum": [
            "quoted",
            "approved",
            "in_process",
            "ready",
            "shipped",
            "delivered",
            "cancelled",
            "delayed",
            "shortage"
          ],
          "readOnly": true
        },
        "payment_status": {
          "title": "Payment status",
          "type": "string",
          "enum": ["unpaid", "credit", "paid", "in_process", "rejected"]
        },
        "rejection_reason": {
          "title": "MP rejection reason",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "origin": {
          "title": "Origin",
          "type": "string",
          "maxLength": 20
        },
        "subtotal": {
          "title": "Subtotal",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "iva": {
          "title": "Iva",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "shipping_price": {
          "title": "Shipping price",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "shipping_discount": {
          "title": "Temporal shipping discount",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "shipping_cost": {
          "title": "Shipping cost",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "discount": {
          "title": "Order discount",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "total": {
          "title": "Total",
          "type": "string",
          "format": "decimal",
          "readOnly": true
        },
        "payment_date": {
          "title": "Payment date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "shipping_date": {
          "title": "Shipping date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "expected_delivery_date": {
          "title": "Expected delivery date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "max_delivery_date": {
          "title": "Maximum delivery date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "receiving_date": {
          "title": "Receiving date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "folio": {
          "title": "Folio",
          "type": "string",
          "maxLength": 20
        },
        "cfdi": {
          "title": "Facturama's cfdi id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "external_payment_id": {
          "title": "External payment id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "generated_by": {
          "title": "Order generated by user",
          "type": "integer",
          "x-nullable": true
        },
        "updated_by": {
          "title": "Last user to update order",
          "type": "integer",
          "x-nullable": true
        },
        "reminder": {
          "title": "Reminder",
          "type": "integer",
          "x-nullable": true
        },
        "subscription": {
          "title": "Subscription",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "OrderDetailRead": {
      "required": ["product", "price", "quantity", "order"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "$ref": "#/definitions/ProductRead"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal"
        },
        "subtotal": {
          "title": "Subtotal",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "total": {
          "title": "Total",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "discount": {
          "title": "Discount",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "iva": {
          "title": "Iva",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "order": {
          "title": "Order",
          "type": "integer"
        }
      }
    },
    "Shipping": {
      "required": [
        "street",
        "exterior_number",
        "neighborhood",
        "city",
        "state",
        "country",
        "zipcode",
        "phone",
        "patient"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 30
        },
        "street": {
          "title": "Street",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "exterior_number": {
          "title": "Exterior number",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "interior_number": {
          "title": "Interior number",
          "type": "string",
          "maxLength": 20
        },
        "neighborhood": {
          "title": "Neighborhood",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "city": {
          "title": "City",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "state": {
          "title": "State",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "country": {
          "title": "Country",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "zipcode": {
          "title": "Zip code",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "phone": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "additional_info": {
          "title": "Additional info",
          "type": "string"
        },
        "latitude": {
          "title": "Latitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "longitude": {
          "title": "Longitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "patient": {
          "title": "Patient with this shipping details",
          "type": "integer"
        }
      }
    },
    "Store": {
      "required": [
        "street",
        "exterior_number",
        "neighborhood",
        "city",
        "state",
        "country",
        "zipcode",
        "phone",
        "company_name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 30
        },
        "street": {
          "title": "Street",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "exterior_number": {
          "title": "Exterior number",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "interior_number": {
          "title": "Interior number",
          "type": "string",
          "maxLength": 20
        },
        "neighborhood": {
          "title": "Neighborhood",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "city": {
          "title": "City",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "state": {
          "title": "State",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "country": {
          "title": "Country",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "zipcode": {
          "title": "Zip code",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "phone": {
          "title": "Phone number",
          "type": "string",
          "maxLength": 25,
          "minLength": 1
        },
        "additional_info": {
          "title": "Additional info",
          "type": "string"
        },
        "latitude": {
          "title": "Latitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "longitude": {
          "title": "Longitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "company_name": {
          "title": "Company name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "business_hours": {
          "title": "Business hours",
          "type": "string"
        }
      }
    },
    "PaymentRead": {
      "required": ["user", "card_id"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "title": "Card owner",
          "type": "integer"
        },
        "card_id": {
          "title": "Card id",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "method": {
          "title": "Method",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 30
        }
      }
    },
    "PaypalAgreement": {
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "email": {
          "title": "Direcci\u00f3n de correo electr\u00f3nico",
          "type": "string",
          "format": "email",
          "readOnly": true,
          "minLength": 1
        },
        "user": {
          "title": "Billing agreement owner",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "OtherPayment": {
      "required": ["method", "reference", "external_url"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "method": {
          "title": "Method",
          "type": "string",
          "maxLength": 20,
          "minLength": 1
        },
        "reference": {
          "title": "Reference",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "institution": {
          "title": "Institution",
          "type": "string",
          "maxLength": 50
        },
        "external_url": {
          "title": "External url",
          "type": "string",
          "format": "uri",
          "maxLength": 200,
          "minLength": 1
        },
        "order": {
          "title": "Order",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PaymentMethod": {
      "required": ["fee", "name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "fee": {
          "title": "Fee",
          "type": "string",
          "format": "decimal"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "fixed_fee": {
          "title": "Fixed",
          "type": "string",
          "format": "decimal"
        }
      }
    },
    "CouponRead": {
      "required": ["code", "value"],
      "type": "object",
      "properties": {
        "code": {
          "title": "Code",
          "type": "string",
          "maxLength": 16,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 150
        },
        "value": {
          "title": "Value",
          "type": "string",
          "format": "decimal"
        },
        "has_free_shipping": {
          "title": "Has free shipping",
          "type": "boolean"
        }
      }
    },
    "Prescription": {
      "required": ["issue_date", "patient"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "document_name": {
          "title": "Document name",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "issue_date": {
          "title": "Issue date",
          "type": "string",
          "format": "date"
        },
        "expiring_date": {
          "title": "Expiring date",
          "type": "string",
          "format": "date"
        },
        "document": {
          "title": "Document",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "is_verified": {
          "title": "Is verified",
          "type": "boolean",
          "readOnly": true
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "updated_by": {
          "title": "Last user to update prescription",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "OrderRead": {
      "required": [
        "details",
        "patient",
        "payment_references",
        "payment_method",
        "payment_date",
        "shipping_date",
        "expected_delivery_date",
        "max_delivery_date",
        "receiving_date",
        "subtotal",
        "shipping_price",
        "discount",
        "total"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderDetailRead"
          }
        },
        "patient": {
          "$ref": "#/definitions/PatientRead"
        },
        "shipping": {
          "$ref": "#/definitions/Shipping"
        },
        "store": {
          "$ref": "#/definitions/Store"
        },
        "payment": {
          "$ref": "#/definitions/PaymentRead"
        },
        "paypal_agreement": {
          "$ref": "#/definitions/PaypalAgreement"
        },
        "payment_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherPayment"
          }
        },
        "payment_method": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "coupon": {
          "$ref": "#/definitions/CouponRead"
        },
        "generated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "updated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "invoicing": {
          "$ref": "#/definitions/Invoicing"
        },
        "payment_date": {
          "title": "Payment date",
          "type": "string",
          "format": "date-time"
        },
        "shipping_date": {
          "title": "Shipping date",
          "type": "string",
          "format": "date-time"
        },
        "expected_delivery_date": {
          "title": "Expected delivery date",
          "type": "string",
          "format": "date-time"
        },
        "max_delivery_date": {
          "title": "Max delivery date",
          "type": "string",
          "format": "date-time"
        },
        "receiving_date": {
          "title": "Receiving date",
          "type": "string",
          "format": "date-time"
        },
        "patient_order_status": {
          "title": "Patient order status",
          "type": "string",
          "readOnly": true
        },
        "prescription": {
          "$ref": "#/definitions/Prescription"
        },
        "tags": {
          "title": "Tags",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "insurance_refund_status": {
          "title": "Insurance refund status",
          "type": "string",
          "enum": [
            "not_started",
            "missing_data",
            "sent_to_broker",
            "sent_to_insurer",
            "approved_by_insurer"
          ]
        },
        "order_status": {
          "title": "Order status",
          "type": "string",
          "enum": [
            "quoted",
            "approved",
            "in_process",
            "ready",
            "shipped",
            "delivered",
            "cancelled",
            "delayed",
            "shortage"
          ]
        },
        "payment_status": {
          "title": "Payment status",
          "type": "string",
          "enum": ["unpaid", "credit", "paid", "in_process", "rejected"]
        },
        "rejection_reason": {
          "title": "MP rejection reason",
          "type": "string",
          "maxLength": 50
        },
        "origin": {
          "title": "Origin",
          "type": "string",
          "maxLength": 20
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "logistics_supplier": {
          "title": "Logistics supplier",
          "type": "string",
          "maxLength": 50
        },
        "tracking_code": {
          "title": "Tracking code",
          "type": "string",
          "maxLength": 50
        },
        "subtotal": {
          "title": "Subtotal",
          "type": "string",
          "format": "decimal"
        },
        "iva": {
          "title": "Iva",
          "type": "string",
          "format": "decimal"
        },
        "shipping_price": {
          "title": "Shipping price",
          "type": "string",
          "format": "decimal"
        },
        "shipping_discount": {
          "title": "Temporal shipping discount",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "shipping_cost": {
          "title": "Shipping cost",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "discount": {
          "title": "Order discount",
          "type": "string",
          "format": "decimal"
        },
        "total": {
          "title": "Total",
          "type": "string",
          "format": "decimal"
        },
        "folio": {
          "title": "Folio",
          "type": "string",
          "maxLength": 20
        },
        "cfdi": {
          "title": "Facturama's cfdi id",
          "type": "string",
          "maxLength": 30
        },
        "external_payment_id": {
          "title": "External payment id",
          "type": "string",
          "maxLength": 50
        },
        "shipping_method": {
          "title": "Shipping method",
          "type": "integer",
          "x-nullable": true
        },
        "reminder": {
          "title": "Reminder",
          "type": "integer",
          "x-nullable": true
        },
        "subscription": {
          "title": "Subscription",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "PatientOrderRead": {
      "required": [
        "details",
        "patient",
        "payment_references",
        "payment_method",
        "payment_date",
        "shipping_date",
        "expected_delivery_date",
        "max_delivery_date",
        "receiving_date",
        "subtotal",
        "shipping_price",
        "discount",
        "total"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderDetailRead"
          }
        },
        "patient": {
          "$ref": "#/definitions/PatientRead"
        },
        "shipping": {
          "$ref": "#/definitions/Shipping"
        },
        "store": {
          "$ref": "#/definitions/Store"
        },
        "payment": {
          "$ref": "#/definitions/PaymentRead"
        },
        "paypal_agreement": {
          "$ref": "#/definitions/PaypalAgreement"
        },
        "payment_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherPayment"
          }
        },
        "payment_method": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "coupon": {
          "$ref": "#/definitions/CouponRead"
        },
        "generated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "updated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "invoicing": {
          "$ref": "#/definitions/Invoicing"
        },
        "payment_date": {
          "title": "Payment date",
          "type": "string",
          "format": "date-time"
        },
        "shipping_date": {
          "title": "Shipping date",
          "type": "string",
          "format": "date-time"
        },
        "expected_delivery_date": {
          "title": "Expected delivery date",
          "type": "string",
          "format": "date-time"
        },
        "max_delivery_date": {
          "title": "Max delivery date",
          "type": "string",
          "format": "date-time"
        },
        "receiving_date": {
          "title": "Receiving date",
          "type": "string",
          "format": "date-time"
        },
        "patient_order_status": {
          "title": "Patient order status",
          "type": "string",
          "readOnly": true
        },
        "prescription": {
          "$ref": "#/definitions/Prescription"
        },
        "tags": {
          "title": "Tags",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "insurance_refund_status": {
          "title": "Insurance refund status",
          "type": "string",
          "enum": [
            "not_started",
            "missing_data",
            "sent_to_broker",
            "sent_to_insurer",
            "approved_by_insurer"
          ]
        },
        "order_status": {
          "title": "Order status",
          "type": "string",
          "enum": [
            "quoted",
            "approved",
            "in_process",
            "ready",
            "shipped",
            "delivered",
            "cancelled",
            "delayed",
            "shortage"
          ]
        },
        "payment_status": {
          "title": "Payment status",
          "type": "string",
          "enum": ["unpaid", "credit", "paid", "in_process", "rejected"]
        },
        "rejection_reason": {
          "title": "MP rejection reason",
          "type": "string",
          "maxLength": 50
        },
        "origin": {
          "title": "Origin",
          "type": "string",
          "maxLength": 20
        },
        "subtotal": {
          "title": "Subtotal",
          "type": "string",
          "format": "decimal"
        },
        "iva": {
          "title": "Iva",
          "type": "string",
          "format": "decimal"
        },
        "shipping_price": {
          "title": "Shipping price",
          "type": "string",
          "format": "decimal"
        },
        "shipping_discount": {
          "title": "Temporal shipping discount",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "shipping_cost": {
          "title": "Shipping cost",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "discount": {
          "title": "Order discount",
          "type": "string",
          "format": "decimal"
        },
        "total": {
          "title": "Total",
          "type": "string",
          "format": "decimal"
        },
        "folio": {
          "title": "Folio",
          "type": "string",
          "maxLength": 20
        },
        "cfdi": {
          "title": "Facturama's cfdi id",
          "type": "string",
          "maxLength": 30
        },
        "external_payment_id": {
          "title": "External payment id",
          "type": "string",
          "maxLength": 50
        },
        "shipping_method": {
          "title": "Shipping method",
          "type": "integer",
          "x-nullable": true
        },
        "reminder": {
          "title": "Reminder",
          "type": "integer",
          "x-nullable": true
        },
        "subscription": {
          "title": "Subscription",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "PatientWrite": {
      "required": ["user"],
      "type": "object",
      "properties": {
        "user": {
          "title": "User",
          "type": "integer"
        },
        "referred_by": {
          "title": "Referred by user",
          "type": "integer",
          "x-nullable": true
        },
        "default_shipping": {
          "title": "The default shipping details",
          "type": "integer",
          "x-nullable": true
        },
        "preferred_payment": {
          "title": "The preferred payment details",
          "type": "integer",
          "x-nullable": true
        },
        "default_invoicing": {
          "title": "The default invoicing details",
          "type": "integer",
          "x-nullable": true
        },
        "insurance_carriers": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "PaymentToken": {
      "required": ["token"],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "PaymentWrite": {
      "required": ["user", "card_id"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "user": {
          "title": "Card owner",
          "type": "integer"
        },
        "card_id": {
          "title": "Card id",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "method": {
          "title": "Method",
          "type": "string",
          "maxLength": 30,
          "x-nullable": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 30
        }
      }
    },
    "ProductVariantWrite": {
      "required": ["value", "variant"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "value": {
          "title": "Value",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "product": {
          "title": "Product",
          "type": "integer",
          "readOnly": true
        },
        "variant": {
          "title": "Variant",
          "type": "integer"
        }
      }
    },
    "ProductWrite": {
      "required": ["base", "price"],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer"
        },
        "base": {
          "title": "Base",
          "type": "integer"
        },
        "current_supplier": {
          "title": "Current supplier",
          "type": "integer",
          "x-nullable": true
        },
        "product_variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductVariantWrite"
          }
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "presentation": {
          "title": "Presentation",
          "type": "string",
          "maxLength": 200
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal"
        },
        "has_iva": {
          "title": "Has iva",
          "type": "boolean"
        },
        "public_price": {
          "title": "Public price",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "average_cost": {
          "title": "Average cost",
          "type": "string",
          "format": "decimal"
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "sat_key": {
          "title": "Sat key",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "sat_unit": {
          "title": "Sat unit",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "has_shortage": {
          "title": "Has shortage",
          "type": "boolean"
        },
        "ean_key": {
          "title": "Ean field",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "should_calculate_price": {
          "title": "Calculate price",
          "type": "boolean"
        },
        "enlace_vital_description": {
          "title": "Description for enlace vital discount",
          "type": "string",
          "maxLength": 10
        },
        "active_ingredient": {
          "title": "Active ingredient",
          "type": "string",
          "maxLength": 250,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "x-nullable": true
        },
        "group_number": {
          "title": "Group number",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "is_generic": {
          "title": "Is generic",
          "type": "boolean",
          "x-nullable": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 250,
          "x-nullable": true
        },
        "album": {
          "title": "Album",
          "type": "integer",
          "x-nullable": true
        },
        "category": {
          "title": "Product's category",
          "type": "integer",
          "x-nullable": true
        },
        "medical_information": {
          "title": "Product's medical information",
          "type": "integer",
          "x-nullable": true
        },
        "pharmaceutical_company": {
          "title": "Product's pharmaceutical company",
          "type": "integer",
          "x-nullable": true
        },
        "diseases": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "Publication": {
      "required": ["doctor"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "published_at": {
          "title": "Published at",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "thumbnail_image": {
          "title": "Thumbnail image",
          "type": "string",
          "readOnly": true,
          "x-nullable": true,
          "format": "uri"
        },
        "title": {
          "title": "Title",
          "type": "string",
          "x-nullable": true
        },
        "preview": {
          "title": "Preview",
          "type": "string",
          "x-nullable": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "maxLength": 250,
          "x-nullable": true
        },
        "doctor": {
          "title": "The doctor's publication",
          "type": "integer"
        }
      }
    },
    "ReminderDetail": {
      "required": ["product", "quantity"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "integer"
        },
        "default_image": {
          "title": "Default image",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "reminder": {
          "title": "Reminder",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Reminder": {
      "required": ["details", "patient", "next_date"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReminderDetail"
          }
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "remaining_days": {
          "title": "Remaining days",
          "type": "string",
          "readOnly": true
        },
        "subtotal": {
          "title": "Subtotal",
          "type": "string",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "next_date": {
          "title": "Next_date",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResetPasswordWrite": {
      "required": ["token", "email", "password", "password_verification"],
      "type": "object",
      "properties": {
        "token": {
          "title": "Token",
          "type": "string",
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "password_verification": {
          "title": "Password verification",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Secretary": {
      "required": ["doctor"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100
        },
        "email": {
          "title": "Email",
          "type": "string",
          "maxLength": 100
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25
        },
        "secondary_phone": {
          "title": "Secondary phone",
          "type": "string",
          "maxLength": 25
        },
        "whatsapp_phone": {
          "title": "Whatsapp phone",
          "type": "string",
          "maxLength": 25
        },
        "doctor": {
          "title": "Doctor",
          "type": "integer"
        }
      }
    },
    "SessionLogin": {
      "required": ["password", "email"],
      "type": "object",
      "properties": {
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ShippingMethodZipCodeLocationRead": {
      "required": ["price", "shipping_method", "zip_code_location"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal"
        },
        "shipping_method": {
          "title": "Shipping method",
          "type": "integer"
        },
        "zip_code_location": {
          "title": "Zip code location",
          "type": "integer"
        }
      }
    },
    "ShippingMethodZipCodeLocationWrite": {
      "required": ["zip_code_location", "shipping_method", "price"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "zip_code_location": {
          "title": "Zip code location",
          "type": "integer"
        },
        "shipping_method": {
          "title": "Shipping method",
          "type": "integer"
        },
        "price": {
          "title": "Price",
          "type": "string",
          "format": "decimal"
        }
      }
    },
    "ShippingMethod": {
      "required": ["company", "method"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "company": {
          "title": "Company",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "method": {
          "title": "Method",
          "type": "string",
          "enum": ["standard", "express", "local", "default"]
        },
        "min_delivery_days": {
          "title": "Minimum delivery day",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "max_delivery_days": {
          "title": "Maximum delivery day",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "zip_code_locations": {
          "type": "array",
          "items": {
            "title": "Shipping method's zip code location",
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        }
      }
    },
    "SubscriptionDetailRead": {
      "required": ["product", "quantity", "subscription"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "$ref": "#/definitions/ProductRead"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "subscription": {
          "title": "Subscription",
          "type": "integer"
        }
      }
    },
    "ActiveOrder": {
      "required": ["total"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "total": {
          "title": "Total",
          "type": "string",
          "format": "decimal"
        }
      }
    },
    "PatientSubscriptionRead": {
      "required": [
        "details",
        "patient",
        "shipping",
        "payment",
        "paypal_agreement",
        "invoicing",
        "next_order_to_deliver",
        "active_unpaid_order",
        "name",
        "frequency"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionDetailRead"
          }
        },
        "patient": {
          "$ref": "#/definitions/PatientRead"
        },
        "shipping": {
          "$ref": "#/definitions/Shipping"
        },
        "payment": {
          "$ref": "#/definitions/PaymentRead"
        },
        "paypal_agreement": {
          "$ref": "#/definitions/PaypalAgreement"
        },
        "invoicing": {
          "$ref": "#/definitions/Invoicing"
        },
        "generated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "next_payment": {
          "title": "Next payment",
          "type": "string",
          "readOnly": true
        },
        "next_delivery": {
          "title": "Next delivery",
          "type": "string",
          "readOnly": true
        },
        "next_order_to_deliver": {
          "$ref": "#/definitions/ActiveOrder"
        },
        "active_unpaid_order": {
          "$ref": "#/definitions/ActiveOrder"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["created", "active", "paused", "cancelled"]
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "started_at": {
          "title": "Started at",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "delivery_day": {
          "title": "Expected delivery day",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "delivery_month": {
          "title": "Expected delivery month",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "frequency": {
          "title": "Frequency",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        }
      }
    },
    "SubscriptionDetailWrite": {
      "required": ["product", "quantity"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "integer"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "quantity": {
          "title": "Quantity",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "subscription": {
          "title": "Subscription",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SubscriptionCreate": {
      "required": ["details", "patient", "name", "frequency"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionDetailWrite"
          }
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "payment": {
          "title": "Payment",
          "type": "integer",
          "x-nullable": true
        },
        "paypal_agreement": {
          "title": "Paypal agreement",
          "type": "integer",
          "x-nullable": true
        },
        "shipping": {
          "title": "Shipping",
          "type": "integer",
          "x-nullable": true
        },
        "invoicing": {
          "title": "Invoicing",
          "type": "integer",
          "x-nullable": true
        },
        "generated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["created", "active", "paused", "cancelled"],
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "started_at": {
          "title": "Started at",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "delivery_day": {
          "title": "Expected delivery day",
          "type": "integer",
          "readOnly": true
        },
        "delivery_month": {
          "title": "Expected delivery month",
          "type": "integer",
          "readOnly": true
        },
        "frequency": {
          "title": "Frequency",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        }
      }
    },
    "SubscriptionRead": {
      "required": [
        "details",
        "patient",
        "shipping",
        "payment",
        "paypal_agreement",
        "invoicing",
        "next_order_to_deliver",
        "active_unpaid_order",
        "name",
        "frequency"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionDetailRead"
          }
        },
        "patient": {
          "$ref": "#/definitions/PatientRead"
        },
        "shipping": {
          "$ref": "#/definitions/Shipping"
        },
        "payment": {
          "$ref": "#/definitions/PaymentRead"
        },
        "paypal_agreement": {
          "$ref": "#/definitions/PaypalAgreement"
        },
        "invoicing": {
          "$ref": "#/definitions/Invoicing"
        },
        "generated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "next_payment": {
          "title": "Next payment",
          "type": "string",
          "readOnly": true
        },
        "next_delivery": {
          "title": "Next delivery",
          "type": "string",
          "readOnly": true
        },
        "next_order_to_deliver": {
          "$ref": "#/definitions/ActiveOrder"
        },
        "active_unpaid_order": {
          "$ref": "#/definitions/ActiveOrder"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["created", "active", "paused", "cancelled"]
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "started_at": {
          "title": "Started at",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "delivery_day": {
          "title": "Expected delivery day",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "delivery_month": {
          "title": "Expected delivery month",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "frequency": {
          "title": "Frequency",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        }
      }
    },
    "SubscriptionWrite": {
      "required": ["details", "patient", "name", "frequency"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionDetailWrite"
          }
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "payment": {
          "title": "Payment",
          "type": "integer",
          "x-nullable": true
        },
        "paypal_agreement": {
          "title": "Paypal agreement",
          "type": "integer",
          "x-nullable": true
        },
        "shipping": {
          "title": "Shipping",
          "type": "integer",
          "x-nullable": true
        },
        "invoicing": {
          "title": "Invoicing",
          "type": "integer",
          "x-nullable": true
        },
        "generated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["created", "active", "paused", "cancelled"],
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "started_at": {
          "title": "Started at",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "delivery_day": {
          "title": "Expected delivery day",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "delivery_month": {
          "title": "Expected delivery month",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "frequency": {
          "title": "Frequency",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        }
      }
    },
    "PatientSubscriptionWrite": {
      "required": ["details", "patient", "name", "frequency"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionDetailWrite"
          }
        },
        "patient": {
          "title": "Patient",
          "type": "integer"
        },
        "payment": {
          "title": "Payment",
          "type": "integer",
          "x-nullable": true
        },
        "paypal_agreement": {
          "title": "Paypal agreement",
          "type": "integer",
          "x-nullable": true
        },
        "shipping": {
          "title": "Shipping",
          "type": "integer",
          "x-nullable": true
        },
        "invoicing": {
          "title": "Invoicing",
          "type": "integer",
          "x-nullable": true
        },
        "generated_by": {
          "$ref": "#/definitions/UserRead"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": ["created", "active", "paused", "cancelled"],
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "started_at": {
          "title": "Started at",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "delivery_day": {
          "title": "Expected delivery day",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "delivery_month": {
          "title": "Expected delivery month",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "frequency": {
          "title": "Frequency",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        }
      }
    },
    "SubscriptionStartWrite": {
      "required": ["delivery_day", "delivery_month"],
      "type": "object",
      "properties": {
        "delivery_day": {
          "title": "Delivery day",
          "type": "integer",
          "maximum": 31,
          "minimum": 1
        },
        "delivery_month": {
          "title": "Delivery month",
          "type": "integer",
          "maximum": 11,
          "minimum": 0
        }
      }
    },
    "SupplierProductWrite": {
      "required": ["cost", "product"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "cost": {
          "title": "Cost",
          "type": "string",
          "format": "decimal"
        },
        "supplier": {
          "title": "Supplier",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "integer"
        }
      }
    },
    "SupplierWrite": {
      "required": ["name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "supplier_products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplierProductWrite"
          }
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Nombre",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "TokenLoginWrite": {
      "required": ["email", "password"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TokenRefreshRead": {
      "required": ["access"],
      "type": "object",
      "properties": {
        "access": {
          "title": "Access",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TokenRefresh": {
      "required": ["refresh"],
      "type": "object",
      "properties": {
        "refresh": {
          "title": "Refresh",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserWrite": {
      "required": ["email", "first_name", "last_name"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "password": {
          "title": "Password",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "date_joined": {
          "title": "Fecha de alta",
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleted_at": {
          "title": "Deleted at",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "email": {
          "title": "Direcci\u00f3n de correo electr\u00f3nico",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25
        },
        "is_active": {
          "title": "Activo",
          "type": "boolean"
        },
        "first_name": {
          "title": "Fist name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "last_name": {
          "title": "Apellidos",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "second_last_name": {
          "title": "Second last name",
          "type": "string",
          "maxLength": 100,
          "x-nullable": true
        },
        "sex": {
          "title": "Sex",
          "type": "string",
          "enum": ["M", "F"]
        },
        "birthdate": {
          "title": "Birthdate",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "medical_condition": {
          "title": "Medical condition",
          "type": "string",
          "maxLength": 100
        },
        "groups": {
          "description": "Los grupos a los que pertenece este usuario. Un usuario tendr\u00e1 todos los permisos asignados a cada uno de sus grupos.",
          "type": "array",
          "items": {
            "title": "Grupos",
            "description": "Los grupos a los que pertenece este usuario. Un usuario tendr\u00e1 todos los permisos asignados a cada uno de sus grupos.",
            "type": "integer"
          },
          "readOnly": true,
          "uniqueItems": true
        }
      }
    },
    "WaitingList": {
      "required": ["product"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "product": {
          "title": "Product",
          "type": "integer"
        },
        "email": {
          "title": "Direcci\u00f3n de correo electr\u00f3nico",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "phone": {
          "title": "Phone",
          "type": "string",
          "maxLength": 25
        }
      }
    },
    "WorkExperience": {
      "required": ["start_year", "end_year", "doctor", "institution"],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "title": "Updated at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "role": {
          "title": "Role",
          "type": "string",
          "maxLength": 100
        },
        "start_year": {
          "title": "Start year",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "end_year": {
          "title": "End year",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "doctor": {
          "title": "Doctor",
          "type": "integer"
        },
        "institution": {
          "title": "Institution",
          "type": "integer"
        }
      }
    }
  }
}
